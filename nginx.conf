events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;
    
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=admin:10m rate=5r/s;
    
    # Upstream 설정 - Django 애플리케이션
    upstream streamly {
        server web:8000;  # Docker 내부 네트워크에서 web 서비스의 8000 포트로 연결 (내부 통신)
    }
    
    # Upstream 설정 - Adminer
    upstream adminer {
        server adminer:8080;  # Docker 내부 네트워크에서 adminer 서비스의 8080 포트로 연결
    }
    
    server {
        listen 40732;  # nginx가 40732 포트로 수신 (외부 접속용)
        server_name localhost 127.0.0.1 streamly.jgplabs.kr;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        
        # Static files
        location /static/ {
            alias /app/static_collected/;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }
        
        # Adminer database management tool (MUST be before catch-all locations)
        location ^~ /adminer {
            # Remove trailing slash if accessing /adminer
            rewrite ^/adminer$ /adminer/ permanent;
        }
        
        location ^~ /adminer/ {
            proxy_pass http://adminer/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Important: handle the URL rewriting
            proxy_redirect ~^/(.*)$ /adminer/$1;
            
            # Adminer specific settings
            proxy_buffering off;
            proxy_request_buffering off;
            client_max_body_size 200M;
            
            # Security headers
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
        }
        
        # API endpoints with rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://streamly;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Admin endpoints with rate limiting
        location /admin/ {
            limit_req zone=admin burst=10 nodelay;
            proxy_pass http://streamly;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # All other requests
        location / {
            proxy_pass http://streamly;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            proxy_pass http://streamly;
            proxy_set_header Host $host;
        }
        
        # Block common attack patterns
        location ~* \.(git|svn|env) {
            deny all;
            return 404;
        }
        
        # Block access to sensitive files
        location ~* \.(sql|log|conf)$ {
            deny all;
            return 404;
        }
    }
}